package com.kuzmin.bookstore.hateoas;

import com.kuzmin.bookstore.api.model.Book;
import com.kuzmin.bookstore.controller.BooksController;
import com.kuzmin.bookstore.model.BookEntity;
import org.springframework.beans.BeanUtils;
import org.springframework.hateoas.server.mvc.RepresentationModelAssemblerSupport;

import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.linkTo;
import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.methodOn;

public class BookRepresentationModelAssembler extends RepresentationModelAssemblerSupport<BookEntity, Book> {
    /**
     * Creates a new {@link RepresentationModelAssemblerSupport} using the given controller class and resource type.
     *
     * @param controllerClass must not be {@literal null}.
     * @param resourceType    must not be {@literal null}.
     */
    public BookRepresentationModelAssembler(Class<?> controllerClass, Class<Book> resourceType) {
        super(controllerClass, resourceType);
    }

    @Override
    public Book toModel(BookEntity entity) {
        Book resource = createModelWithId(entity.getId(), entity);
        BeanUtils.copyProperties(entity, resource);
        resource.setId(entity.getId());
        // Self link generated by createModelWithId has missing api path. Therefore generating additionally.
        // can be removed once fixed.
        resource.add(
                linkTo(methodOn(BooksController.class).getBook(entity.getId().toString()))
                        .withSelfRel());
        return resource;
    }
}
