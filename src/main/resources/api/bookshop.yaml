openapi: 3.0.3
info:
  title: Книжный магазин
  description:
    Это описание API для книжного магазина
  contact:
    name: Aleksey Kuzmin
    email: support@packtpub.com
  version: 1.0.0
servers:
  - url: https://bookshop.swagger.io/v1
tags:
  - name: genres
    description: Жанры
  - name: authors
    description: Авторы
  - name: books
    description: Каталог книг
paths:
  /api/v1/books:
    get:
      tags:
        - books
      summary: Список всех книг
      description: Возвращает список книг согласно критериям поиска
      operationId: queryBooks
      parameters:
        - name: id
          in: query
          description: Идентификатор книги
          required: false
          schema:
            type: string
        - name: title
          in: query
          description: Название книги
          required: false
          schema:
            type: string
        - name: ISBN
          in: query
          description: ISBN
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Номер запрашиваемой страницы
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: Размер запрашиваемой страницы
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        200:
          description: Для успешного ответа.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /api/v1/books/{id}:
    get:
      tags:
        - books
      summary: Возвращает конкретную книгу из каталога
      description: Возвращает конкретную книгу из каталога по идентификатору
      operationId: getBook
      parameters:
        - name: id
          in: path
          description: Идентификатор книги
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Для успешного ответа.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /api/v1/authors:
    get:
      tags:
        - authors
      summary: Возвращает всех авторов книг
      description: Возвращает всех авторов книг или пустой ответ, если авторов книг не найдены
      operationId: getAllAuthors
      responses:
        200:
          description: Для успешного ответа.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
  /api/v1/authors/{id}:
    get:
      tags:
        - authors
      summary: Возвращает автора книг
      description: Возвращает конкретного автора книг по предоставленному идентификатору
      operationId: getAuthorById
      parameters:
        - name: id
          in: path
          description: Идентификатор автора
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Для успешного ответа.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    delete:
      tags:
        - authors
      summary: Удалить автора
      description: Удалить автора по предоставленному идентификатору
      operationId: deleteAuthorById
      parameters:
        - name: id
          in: path
          description: Идентификатор автора
          required: true
          schema:
            type: string
      responses:
        202:
          description: Запрос принят, возвращается данный статус даже если автор не найден
          content: {}
  /api/v1/genres:
    get:
      tags:
        - genres
      summary: Возвращает все жанры книг
      description: Возвращает все жанры книг или пустой ответ, если жанры книг не найдены
      operationId: getAllGenres
      responses:
        200:
          description: Для успешного ответа.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genre'
  /api/v1/genres/{id}:
    get:
      tags:
        - genres
      summary: Возвращает жанр книг
      description: Возвращает конкретный жанр книг по предоставленному идентификатору
      operationId: getGenreById
      parameters:
        - name: id
          in: path
          description: Идентификатор жанра
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Для успешного ответа.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
    delete:
      tags:
        - genres
      summary: Удалить жанр
      description: Удалить жанр по предоставленному идентификатору
      operationId: deleteGenreById
      parameters:
        - name: id
          in: path
          description: Идентификатор жанра
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Запрос принят, возвращается данный статус даже если жанр не найден
          content: { }
components:
  schemas:
    Book:
      description: Информация о книге
      type: object
      properties:
        id:
          description: Идентификатор книги
          type: integer
          format: int64
        title:
          description: Название книги
          type: string
        isbn:
          description: Международный стандартный книжный номер
          type: string
        annotation:
          description: Описание книги
          type: string
        imageCover:
          description: Картинка обложки
          type: string
          format: byte
        genre:
          #description: Жанр книги
          $ref: '#/components/schemas/Genre'
        authors:
          description: Авторы книги
          type: array
          items:
            $ref: '#/components/schemas/Author'
        price:
          description: Цена книги
          type: number
          format: double
        count:
          description: Количество
          type: integer
          format: int32
#    User:
#      type: object
#      properties:
#        id:
#          type: integer
#          format: int64
#        username:
#          type: string
#        firstName:
#          type: string
#        lastName:
#          type: string
#        email:
#          type: string
#        password:
#          type: string
#        phone:
#          type: string
#        userStatus:
#          type: integer
#          description: User Status
#          format: int32
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
    Genre:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string